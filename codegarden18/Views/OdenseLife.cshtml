@inherits Umbraco.Web.Mvc.UmbracoTemplatePage<ContentModels.OdenseLife>
@using ContentModels = Umbraco.Web.PublishedContentModels;
@{
	Layout = "SiteMaster.cshtml";
}

@* the fun starts here *@

<div class="OdenseLifePage">
    <div class="container odenseLifeBorder">
        <div class="row">
            <div class="odenseLifeBlock1 mt-5 paddingBox">

                <h4> @Umbraco.Field("headline")</h4>

                @Umbraco.Field("bodyText")

            </div>

        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="mapContainer">

                <div class="spansInline">

                    <div class="spanContainerLeft">

                        <p class="textAboveSwitch"> Umbraco HQ</p>

                        <span class="">

                            <label class="active" for="umbraco"></label>
                            <input class="checkbox-onoff active" type="checkbox" name="Umbraco HQ" id="umbraco" value="/JSON/umbraco.json" />
                        </span>


                        <p class="textAboveSwitch"> Restaurants</p>


                        <span class="">
                            <label class="not-active" for="Restaurants"> </label>
                            <input class="checkbox-onoff" type="checkbox" name="Restaurants" id="Restaurants" value="/JSON/restaurants.json" />
                        </span>




                    </div>

                    <div class="spanContainerRight">

                        <p class="textAboveSwitch"> Bars</p>

                        <span>
                            <label class="not-active" for="Bars"> </label>
                            <input class="checkbox-onoff" type="checkbox" name="Bars" id="Bars" value="/JSON/bars.json" />
                        </span>

                        <br />

                        <p class="textAboveSwitch"> Hotels</p>

                        <span>
                            <label class="not-active" for="Hotels"> </label>
                            <input class="checkbox-onoff" type="checkbox" name="Hotels" id="Hotels" value="/JSON/hotels.json" />
                        </span>

                        <br />

                    </div>




                </div>










            </div>

            <div id="map" class="odenseMap">





            </div>

        </div>
    </div>



    <div class="container">
        <div class="row">
            <div class="odenseLifeBlock2 mt-5 paddingBox">

                <h4> @Umbraco.Field("headline2")</h4>

                @Umbraco.Field("bodyText2")

            </div>

        </div>
    </div>

</div>



<script>

    /// calls map, so its visible, and creates the viewwindow and how zoomed it is //
      function initMap() {
        var odense = { lat: 55.40635, lng: 10.38841 };
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 14,
            center: odense
        });

        var infowindow = new google.maps.InfoWindow();


        ///Creates the markers. Markers= an array, that contains all the markers shown on the map 
        var marker, i;
        var markers = [];


          //creates the umbraco markers from json file "umbraco.json"
        jQuery.getJSON("/JSON/umbraco.json", function (data) {
            data.features.forEach(function (umbracoMarker) {
                marker = new google.maps.Marker({
                    position: new google.maps.LatLng(umbracoMarker.properties.lat, umbracoMarker.properties.lon),
                    map: map
                });

                markers.push(marker);

                google.maps.event.addListener(marker, 'click', (function (marker, i) {
                    return function () {
                        infowindow.setContent(umbracoMarker.properties.name);
                        infowindow.open(map, marker);
                    }
                })(marker, i));

            });
        });

          //shows the array of markers in console 

        console.log(markers);


        //this checks if the checkbox is active or not, if active is sets map markers at null, and if not (else) it pushes the markers from the value into the map array.

        google.maps.event.addDomListener(jQuery(".checkbox-onoff").click(function (e) {

            var cElement = jQuery(this);


            if ($(this).hasClass('active')) {


                jQuery.getJSON(cElement.val(), function (data) {
                    data.features.forEach(function (umbracoMarker) {
                        

                        var deleteMarker = new google.maps.Marker({
                            position: new google.maps.LatLng(umbracoMarker.properties.lat, umbracoMarker.properties.lon)
                        });

                        markers.map(function (marker) {

                            if (marker.getPosition().lat() == deleteMarker.getPosition().lat() && marker.getPosition().lng() == deleteMarker.getPosition().lng()) {
                                marker.setMap(null);
                                markers.splice($.inArray(marker, markers), 1);
                            }
                        });

                    });
                });


            } else {

                jQuery.getJSON(cElement.val(), function (data) {
                    data.features.forEach(function (umbracoMarker) {
                        marker = new google.maps.Marker({
                            position: new google.maps.LatLng(umbracoMarker.properties.lat, umbracoMarker.properties.lon),
                            map: map
                        });

                        markers.push(marker);

                        google.maps.event.addListener(marker, 'click', (function (marker, i) {
                            return function () {
                                infowindow.setContent(umbracoMarker.properties.name);
                                infowindow.open(map, marker);
                            }
                        })(marker, i));

                    });
                });
            }





           
            //toggles active on class if clicked
            cElement.siblings().toggleClass("active");
            cElement.toggleClass("active");

        }));

    }





</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBH70JCRW14-_YaxNjqUoxwErWPaNKt3Q8&callback=initMap">
</script>