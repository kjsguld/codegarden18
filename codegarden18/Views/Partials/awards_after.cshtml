@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@using codegarden18.classes
@{
    // get all votes
    //var votes = Model.Content.Site().Descendants<Vote>();
    var votes = Umbraco.TypedContent(1215).Descendants<Vote>();

    // create abstract list of projects 
    List<ProjectVote> list = new List<ProjectVote>();

    // assign votes to projects
    foreach(var vote in votes)
    {
        var thisItem = new ProjectVote();

        // find item if it exists in list
        var addableItem = list.Find(x => x.ProjectId == vote.ProjectID);
        if (addableItem != null)
        {
            addableItem.Votes++;
        }
        else
        {
            // creation of new entry in list 
            thisItem.ProjectId = vote.ProjectID;
            thisItem.Votes = 1;

            var project = Model.Content.Descendants<Project>().Where(x => x.Id == vote.ProjectID);
            var parentCategory = Model.Content.Site().Descendants<Category>().Where(x => x.Id == project.First().Parent.Id);

            //thisItem.ParentId = project.First().Id;
            thisItem.ParentId = parentCategory.First().Id;

            list.Add(thisItem);
        }
    }

    List<ProjectVote> winners = list.OrderBy(x => x.Votes).Take(3).ToList();

    // sort ids based on the higest number of votes

    // query by id
    var projects = Model.Content.Site().Descendants<Project>();
}


<div class="awardsafter">
@foreach (var vote in votes)
{
    @vote.ProjectID
    <br />
}

@foreach (var item in list)
{
    @Html.Raw(item.ProjectId + " - " + item.Votes + " - " + item.ParentId);
    
    <br />
}
    <div class ="title row">
        <div class="col-sm-12">
            <h1 class="text-white">@Umbraco.Field("headlineAfter")</h1>
            <div class="content">
                <div class="text-white">
                    <p>@Umbraco.Field("bodytextAfter")</p>
                </div>
            </div>
        </div>
        @foreach (var project in projects)
        {
            <div class="col-sm-12">
                @project.Id
            </div>
        }
        
    </div>
</div>
