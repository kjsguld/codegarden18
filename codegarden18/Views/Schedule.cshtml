@inherits Umbraco.Web.Mvc.UmbracoTemplatePage<ContentModels.Schedule>
@using ContentModels = Umbraco.Web.PublishedContentModels;
@{
    Layout = "SiteMaster.cshtml";
    var presentations = Model.Content.Site().Descendants<Presentation>().OrderBy(x => x.StartTime);
}

<section id="schedule" class="schedule">
    <div class="block">
        <p> test </p>
        <div class="container">
            <h2 class="headline">@Model.Content.Headline</h2>
            <div class="bodyText">@Model.Content.Bodytext</div> 

    @{ 
        bool newday = true;
        DateTime lastStartTime = new DateTime();
    }

    @foreach (var presentation in presentations)
    {

        // evaluate newday
        newday = lastStartTime.DayOfYear != presentation.StartTime.DayOfYear ? true : false;

        if (newday) // first case
        {
        @:<div class="day">
            @:<h3>@presentation.StartTime.ToString("dddd, MMMM d")</h3>
        
        }
        else if (newday && lastStartTime.Year > 1) // fix nullable yesterday workaround
        {
        @:</div>
        @:<div class="day">
            @:<h3>@presentation.StartTime.ToString("dddd, MMMM d")</h3>
        @:</div>
        

    }


    <div class="timeBox">
        @{
            var uid = System.Guid.NewGuid().ToString();
            var MainId = "Main-" + uid;
            var MenuId = "Menu-" + uid;
            var hasVideoLink = presentation.EventVideoLink != null && presentation.EventVideoLink != "";
            var hasGithubLink = presentation.EventGithubLink != null && presentation.EventGithubLink != "";

            if (lastStartTime.Hour == presentation.StartTime.Hour && lastStartTime.Minute == presentation.StartTime.Minute)
            {

            }
            else
            {
                <h4>@presentation.StartTime.ToString("H:mm")</h4>
            }

        }
        <div class="roomBox">
            <div id="@MainId">
                @{
                    //print out room
                    foreach (var item in presentation.Room)
                    {
                        <h5 class="roomTitle">@item.Name</h5>
                    }
                }

                <p id="presentationHeadline">@presentation.Headline</p>
                @{
                    //print out speakers
                    foreach (var item in presentation.Speaker)
                    {
                        <small id="speakerName">@item.Name</small>
                    }
                }
                <div class="contextButton @(hasVideoLink || hasGithubLink ? "" : "hiddenBox")" data-target="@MenuId" data-self="@MainId">
                    <i class="material-icons">add</i>
                </div>
            </div>
            <div id="@MenuId" class="hiddenBox">
                <div class="hiddenContainer">
                    @if (hasVideoLink)
                    {
                        <div class="iconLink"><a href="@presentation.EventVideoLink"><i class="material-icons">play_circle_filled</i></a></div>
                    }
                    @if (hasGithubLink)
                    {
                        <div class="iconLink"><a href="@presentation.EventGithubLink"><i class="material-icons">dvr</i></a></div>
                    }
                    <div class="iconLink"><a class="addSession" href="#"><i class="material-icons">add_circle</i></a></div>
                </div>
                <div class="contextButton" data-target="@MainId" data-self="@MenuId">
                    <i class="material-icons">clear</i>
                </div>
            </div>
        </div>

    </div>
    
        lastStartTime = presentation.StartTime;
    }

</div>
</div>

        <div class="container">
            <div class="schedulePopUp">
                <a id="popUp" class="removeIcon" href="#"> Open your schedule </a>
                <div class="col-md-10 createYourOwnContent" id="createYourOwnContent">

                </div>
                <a class="button-green downloadYourSchedule" href="">Download your schedule</a>

            </div>
        </div>

</section>





